{"version":3,"sources":["serviceWorker.js","pages/HomePage.js","pages/ProjectsPage.js","pages/AboutMePage.js","pages/EducationAndWorkPage.js","pages/ContactMePage.js","components/Menu.js","index.js"],"names":["Boolean","window","location","hostname","match","HomePage","react_default","a","createElement","ProjectsPage","AboutMePage","EducationAndWorkPage","ContactMePage","Menu","className","react_router_dom","to","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","components_Menu","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4IAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFCPSC,MATf,WACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,8CCISC,MARf,WACE,OACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBCKSE,MARf,WACE,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBCKSG,MARf,WACE,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCCKSI,MARf,WACE,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BCsBSK,MAxBf,WACE,OACEP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACbR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,YAAYF,UAAU,wBAChCR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAb,aAEFR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,YAAYF,UAAU,wBAChCR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAb,aAEFR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,wBACxBR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAb,SAEFR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,sBAAsBF,UAAU,wBAC1CR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAb,qBAEFR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,cAAcF,UAAU,wBAClCR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,aAAb,kBAGJR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aCErBG,gBATa,CACTC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBA0BvBC,IAASC,OACTnB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAvBF,WACE,OACEF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACbR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAD,OAEFpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACbR,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWzB,IACrCC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWrB,IACzCH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWpB,IACzCJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,sBACLC,UAAWnB,IAEbL,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWlB,OAQjD,OACgBmB,SAASC,eAAe,SP8EpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aff7236b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <h1>Voloshchenko Olga</h1>\r\n      <h4>Junior front-end web developer</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction ProjectsPage() {\r\n  return (\r\n    <div>\r\n      <h2>Projects</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import React from \"react\";\r\n\r\nfunction AboutMePage() {\r\n  return (\r\n    <div>\r\n      <h2>About me</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMePage;\r\n","import React from \"react\";\r\n\r\nfunction EducationAndWorkPage() {\r\n  return (\r\n    <div>\r\n      <h2>Education and work</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationAndWorkPage;\r\n","import React from \"react\";\r\n\r\nfunction ContactMePage() {\r\n  return (\r\n    <div>\r\n      <h2>Contact Me</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactMePage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Menu() {\r\n  return (\r\n    <div className=\"sideMenu nav\">\r\n      <div>\r\n        <NavLink to=\"/about-me\" className=\"nav-item nav-count-1\">\r\n          <p className=\"invisible\">About Me</p>\r\n        </NavLink>\r\n        <NavLink to=\"/projects\" className=\"nav-item nav-count-2\">\r\n          <p className=\"invisible\">Projects</p>\r\n        </NavLink>\r\n        <NavLink to=\"/\" className=\"nav-item nav-count-3\">\r\n          <p className=\"invisible\">Home</p>\r\n        </NavLink>\r\n        <NavLink to=\"/education-and-work\" className=\"nav-item nav-count-4\">\r\n          <p className=\"invisible\">Work & Education</p>\r\n        </NavLink>\r\n        <NavLink to=\"/contact-me\" className=\"nav-item nav-count-5\">\r\n          <p className=\"invisible\">Get in Touch</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"circle\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Menu;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport AboutMePage from \"./pages/AboutMePage\";\nimport EducationAndWorkPage from \"./pages/EducationAndWorkPage\";\nimport ContactMePage from \"./pages/ContactMePage\";\nimport Menu from \"./components/Menu\";\n\n\n\nvar config = {\n    apiKey: \"AIzaSyDBNUBlV44NuRIwPQUGKmvXIPAw_X0T_JY\",\n    authDomain: \"portfolio-99b68.firebaseapp.com\",\n    databaseURL: \"https://portfolio-99b68.firebaseio.com\",\n    projectId: \"portfolio-99b68\",\n    storageBucket: \"portfolio-99b68.appspot.com\",\n    messagingSenderId: \"225794336620\"\n  };\n  \nfirebase.initializeApp(config)\n\nfunction App(){\n  return (\n    <div className=\"block\">\n      <div>\n        <Menu />\n      </div>\n      <div className=\"right\">\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/projects\" component={ProjectsPage} />\n        <Route exact path=\"/about-me\" component={AboutMePage} />\n        <Route\n          exact\n          path=\"/education-and-work\"\n          component={EducationAndWorkPage}\n        />\n        <Route exact path=\"/contact-me\" component={ContactMePage} />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(  \n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}